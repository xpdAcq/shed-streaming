@ARTICLE{koerner2020,
  author={L. J. {Koerner} and T. A. {Caswell} and D. B. {Allan} and S. I. {Campbell}},
  journal={IEEE Transactions on Instrumentation and Measurement},
  title={A Python Instrument Control and Data Acquisition Suite for Reproducible Research},
  year={2020},
  volume={69},
  number={4},
  pages={1698-1707},
  doi={10.1109/TIM.2019.2914711}
  }

@article{silva2007,
	title = {Provenance for {Visualizations}: {Reproducibility} and {Beyond}},
	volume = {9},
	issn = {1521-9615},
	shorttitle = {Provenance for {Visualizations}},
	doi = {10.1109/MCSE.2007.106},
	abstract = {The demand for the construction of complex visualizations is growing in many disciplines of science, as users are faced with ever increasing volumes of data to analyze. In this paper, the authors present VisTrails, an open source provenance-management system that provides infrastructure for data exploration and visualization. VisTrails transparently records detailed provenance of exploratory computational tasks and leverages this information beyond just the ability to reproduce and share results. In particular, it uses this information to simplify the process of exploring data through visualization.},
	number = {5},
	journal = {Computing in Science Engineering},
	author = {Silva, C. T. and Freire, J. and Callahan, S. P.},
	month = sep,
	year = {2007},
	pages = {82--89},
	file = {IEEE Xplore Abstract Record:/media/christopher/DATA/zotero/storage/GNYVI4VZ/4293741.html:text/html;IEEE Xplore Full Text PDF:/media/christopher/DATA/zotero/storage/89A99EXH/Silva et al. - 2007 - Provenance for Visualizations Reproducibility and.pdf:application/pdf}
}

@misc{davison2014,
	title = {Sumatra: {A} {Toolkit} for {Reproducible} {Research}},
	shorttitle = {Sumatra},
	url = {https://www.taylorfrancis.com/},
	abstract = {Lack of replicability in computational studies is, at base, a problem of shortcomings in record keeping. In laboratory-based experimental science, the
tradition},
	language = {en},
	urldate = {2018-08-23},
	journal = {Implementing Reproducible Research},
	author = {Davison, Andrew P. and Mattioni, Michele and Samarkanov, Dmitry},
	month = apr,
	year = {2014},
	doi = {10.1201/b16868-9},
	file = {Davison et al. - 2014 - Sumatra A Toolkit for Reproducible Research . . ..pdf:/media/christopher/DATA/zotero/storage/DAEPCCM2/Davison et al. - 2014 - Sumatra A Toolkit for Reproducible Research . . ..pdf:application/pdf;Snapshot:/media/christopher/DATA/zotero/storage/CM3YQKIZ/10.html:text/html}
}

@phdthesis{wright2020,
  author       = {Christopher James Wright},
  title        = {Towards Real Time Characterization of Grain Growth from the Melt},
  school       = {Columbia University},
  year         = 2020,
  address      = {New York, NY},
  month        = 3,
  doi          = {10.7916/d8-5tdx-bb07},
  note         = {An optional note}
}
@book{picard2018,
  title={Hands-On Reactive Programming with Python: Event-driven development unraveled with RxPY},
  author={Picard, Romain},
  year={2018},
  publisher={Packt Publishing Ltd}
}
@article{carbone2015,
  title={Apache flink: Stream and batch processing in a single engine},
  author={Carbone, Paris and Katsifodimos, Asterios and Ewen, Stephan and Markl, Volker and Haridi, Seif and Tzoumas, Kostas},
  journal={Bulletin of the IEEE Computer Society Technical Committee on Data Engineering},
  volume={36},
  number={4},
  year={2015},
  publisher={IEEE Computer Society}
}
@inproceedings{murray2013,
author = {Murray, Derek and McSherry, Frank and Isaacs, Rebecca and Isard, Michael and Barham, Paul and Abadi, Martin},
title = {Naiad: A Timely Dataflow System},
booktitle = {Proceedings of the 24th ACM Symposium on Operating Systems Principles (SOSP)},
year = {2013},
month = {November},
abstract = {Naiad is a distributed system for executing data parallel, cyclic dataflow programs. It offers the high throughput of batch processors, the low latency of stream processors, and the ability to perform iterative and incremental computations. Although existing systems offer some of these features, applications that require all three have relied on multiple platforms, at the expense of efficiency, maintainability, and simplicity. Naiad resolves the complexities of combining these features in one framework.

A new computational model, timely dataflow, underlies Naiad and captures opportunities for parallelism across a wide class of algorithms. This model enriches dataflow computation with timestamps that represent logical points in the computation and provide the basis for an efficient, lightweight coordination mechanism.

We show that many powerful high-level programming models can be built on Naiadâ€™s low-level primitives, enabling such diverse tasks as streaming data analysis, iterative machine learning, and interactive graph mining. Naiad outperforms specialized systems in their target application domains, and its unique features enable the development of new high-performance applications.},
publisher = {ACM},
url = {https://www.microsoft.com/en-us/research/publication/naiad-a-timely-dataflow-system-2/},
edition = {Proceedings of the 24th ACM Symposium on Operating Systems Principles (SOSP)},
}
